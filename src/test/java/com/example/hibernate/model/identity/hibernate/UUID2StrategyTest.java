/**
 * 
 */
package com.example.hibernate.model.identity.hibernate;

import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertTrue;

import java.util.UUID;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

/**
 * @author amit patil
 * In this test case we will try hibernate's native support for UUID as primary key. We will be using "uuid2" as generation strategy.
 * This strategy generates uuid for us prior persist, so we do not need to worry about pk generation.
 * And also, we do not have any impact on merge() operation in this generation strategy, which we have in case of custom primary key generation.
  *
 */
@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class UUID2StrategyTest extends BaseTest {

	private static UUID primaryKey = null;
	@Test
	public void aPersistTest() {
		UUID2Strategy strategy = new UUID2Strategy();
		em.persist(strategy);
		assertNotNull(strategy.getId());
		primaryKey=  strategy.getId();
		System.out.println("----------------------- Persisting Entityt with hibernate's uui2 stategy, pk will be auto-generated by hibernate prior to insert ---------------------");
	}
	
	@Test
	public void bMergeWithUnModifiedManagedEntityTest() {
		UUID2Strategy strategy = em.find(UUID2Strategy.class, primaryKey);
		assertNotNull(strategy);
		assertTrue(em.contains(strategy));
		em.merge(strategy);
		System.out.println("----------------------- Merging managed unmodified Entityt with hibernate's uui2 stategy, hibernate will not execute any query for this operation ---------------------");
	}
	
	@Test
	public void cMergeWithModifiedManagedEntityTest() {
		UUID2Strategy strategy = em.find(UUID2Strategy.class, primaryKey);
		assertNotNull(strategy);
		assertTrue(em.contains(strategy));
		strategy.setFoo("Amit Rocks");
		em.merge(strategy);
		System.out.println("----------------------- Merging managed modified Entityt with hibernate's uui2 stategy, hibernate will execute single update query for this operation ---------------------");
	}
	
	@Test
	public void dMergeWithTransientEntityTest() {
		UUID2Strategy strategy = new UUID2Strategy();
		strategy.setFoo("Amit Rocks2");
		em.merge(strategy);
		System.out.println(
				"----------------------- Merging transient modified Entityt with hibernate's uui2 stategy, hibernate will execute single insert query for this operation and will not execute select statement to check entity exits by provided pk in database---------------------");
	}
}
